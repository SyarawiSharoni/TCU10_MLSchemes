function [y1] = TCU10_annS4_fx(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 03-Feb-2021 14:24:49.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx5 matrix, input #1
% and returns:
%   y = Qx1 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [5.34;0;128.03;141.29;151.78];
x1_step1.gain = [0.1085776330076;0.0854883522120111;0.0138197899391929;0.0147874306839187;0.0161917098445596];
x1_step1.ymin = -1;

% Layer 1
b1 = [0.43622146992601351645;-0.2607505409958132403;-1.5380159829829249674;1.0251949175784689228;0.90936329769236035059;-2.9431735579976328054;0.62215830523815962572;-1.8877402902979540933;1.8496743807865601017;0.22304279826820011534;0.92956114539467771252;-0.63132378940468203421;0.34718426707121657904;-0.94478248441052681272;-0.5531761926868380419];
IW1_1 = [0.30902348139508450942 3.1455030346601651203 -0.92138720849559341275 1.4309707561690623301 -1.0287472209912078558;-3.4802740460295074065 -1.3373059666242537169 -0.2195559367471511536 -0.73499304866882086973 0.62306571498615659355;-2.4236152522199305714 -2.039209232687892559 1.9831924774208147255 -0.2210221863442423107 -0.26266647792095992875;0.35485707039330394164 3.6151371208227232046 0.070515651712726376554 0.35492050066681180009 -0.75908397061445831433;-0.67210504400399118108 2.3667889407098741117 1.3599711830067724438 -0.86513478302631940942 0.16321405972006144958;-1.8922525656521398396 -3.2709976755217602395 2.858801492758827667 0.47279754112801064547 -0.43886991497861266298;-0.3088787322483897424 1.7534971458092614149 0.017514135204246883415 0.14250918616948041184 0.22177165215251845587;1.6505495455110785752 -0.1210380059476463821 -4.9509727720105605187 0.61438836143185748817 -0.67655056982609951266;1.9254157067952606397 2.3338672054617530804 -2.5342639707629581736 0.31325023141835645069 0.29438910188371020249;-0.72869200590878802082 0.50170399534773868488 0.7737029599363830501 0.69502090391577686646 -1.6296052318939675541;-1.2491114990747660407 1.234712154284000496 -0.14177814103482055952 0.34229727343644500426 -0.8503489997271860279;-3.0982261221575333465 -1.1250075752616224278 -1.3957713402718492368 0.44040959892172537593 0.6840075435173808005;2.2731141366233118539 -0.20830707876398260603 1.6756652907959190824 0.20811149923961813624 -0.060938245922483973149;1.3111062463949163526 -2.7841759248098574275 -2.3966070079153678485 1.2725599622770060737 -0.077537297062548443671;-1.0561652158532099932 0.27761343301087559876 -0.34636898559095935513 1.5789048943426291505 -1.6982094437549439814];

% Layer 2
b2 = -0.66094828875095390508;
LW2_1 = [-1.7520795858473503515 -1.493094897946624533 2.2497980924442262385 1.5120435051882348265 -3.8988331024708897665 1.5822977177734773857 3.2295350309499464281 0.17781554375754496378 3.8212449507473453814 3.5411621967202835393 -1.6538894742254266479 1.5079731332236598895 -0.85153333562159105874 -1.6359903610870807356 -2.3398949664243362534];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0562863104043787;
y1_step1.xoffset = 1.12576;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
