function [y1] = TCU10_annS6_fx(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 03-Feb-2021 14:31:52.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx9 matrix, input #1
% and returns:
%   y = Qx1 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [5.34;0;11.08;0;128.03;141.29;151.78;0;0];
x1_step1.gain = [0.1085776330076;0.0854883522120111;0.145454545454545;0.130650640188137;0.0138197899391929;0.0147874306839187;0.0161917098445596;0.632911392405063;0.0175592625109745];
x1_step1.ymin = -1;

% Layer 1
b1 = [-0.72731119298832358488;1.9217062786388625639;-0.9933093615175871971;0.18740073758222197675;-0.50622290637469535834;0.93519784150817775181;-1.0915701556004708817;-2.1207727984893227635;3.3257620090669073321;-2.819424488895609926;-0.099548045806188409368;-3.7142208069067024212;-0.4627144361369678327;0.13617685985105218438;0.29757093326308109438];
IW1_1 = [-1.1385524059933707086 0.50646700016509016429 -1.5369231227156578967 -0.1887521119463915209 -1.4605571824707821449 1.3317350322526950723 1.3373758231336638769 0.080794347265788032941 -0.38229146262908719756;-0.64989222522583367514 0.20893175166385888342 0.91904021281977366087 -0.30768141028166323681 -2.7708371586302273926 -0.38355842769746956167 -1.8404774084996360362 0.84635891972308963105 0.21117559221812107206;0.4227672316373137229 0.50691175435451929498 -0.46453374293702248687 0.10685796773033651164 -0.75375567338997795375 0.64319949008131815926 1.521314623482022288 -0.54732561610672425534 1.0010874298842695751;-0.66897958911181454322 -0.055682197237389319255 0.12818515773561373061 0.49882673533869953397 0.9635642489495138685 2.6388939112735836368 -2.1736559811388933561 -0.32545639086119010353 -0.43302497047632021454;0.44186831822107808243 -0.12725711815253215597 0.14236605862658388566 -0.52274754673499423951 -1.1180566101921864952 -1.732721695894189784 2.4606940042101448363 -0.23476676902211093823 0.24553397305714502741;-0.30919797169747881282 -0.77535172346551606282 0.922815775550162809 -1.3614618010426660089 0.24644899866959271706 -0.068984072326368578443 0.87546287968225444676 0.093941235114685356367 -1.4187349055457261215;0.61371034327692652877 0.52648559413901541149 -0.069943982737159376972 1.1461719197520283675 -1.2993686551982053246 2.3165188950447008764 -0.13900213660583163322 -0.49858366608128323882 1.1215070831285880448;-0.076271819445036651008 -0.30222327243452756784 -2.1091278425616928338 -0.41400344258188648272 -0.42822899200917280416 -0.064345286103419080392 0.42539056853786738621 -0.17121463200247769021 -0.41473790284767902969;-1.9055448017952778539 0.067275694602165231339 3.4898996450335100228 0.11801079773858250133 4.2314861534818346556 -2.8426039674492362685 2.8539152419023445795 -2.2286419461026238942 -0.30248483980433549245;1.3754340169973000574 0.039281912422542156205 -2.5449975682818775091 -0.025512958070182691767 -2.8014639591879215708 1.6848856619281276092 -1.8205240102594224538 1.4787380215212853063 0.15155755457982747481;0.80269306205413870625 -0.49254951149508763297 2.3990635458654954171 0.1071052871986411803 0.036463549945361328763 0.53842147346373281369 -0.63422066817179989506 -0.39541918461230857185 0.047651983193755340085;-1.0445944372870283878 0.43170221376142015046 -3.1255288997146104535 -0.45753332960785980665 -2.0603870205314738229 0.95651770332834507027 2.7241233048002384542 -1.8383016451197307095 -1.0586297451122559377;-1.2601115661675839075 0.94782170739988902408 -0.88522179177855042642 0.35671410558483118702 -1.0062755032467805005 -0.47319708797198578587 0.80146791965482322428 -0.76554317722918596711 0.026718354360618982307;0.47077344039526847208 -1.1820686362217227572 1.1571902319409601567 -0.31589202437352886799 0.73003413792042459729 -0.1673143244000286356 0.5615904384141381378 0.17127283231745860093 -0.33027003632199775085;-0.47721763062552419177 -1.5703114281345749159 2.1393968645754819491 -0.4327451959306299889 0.85004175077810784078 -0.50270138872595282464 0.99735613960641722464 0.039960371763632727971 -0.5379123805799583824];

% Layer 2
b2 = -1.1944054541873281305;
LW2_1 = [0.7039013012406495351 0.19264565143883560783 0.8929219797438897599 -0.97303685022185071318 -1.614101467177028626 -0.68496278480630512497 -0.67412811665648852966 1.8720921883937062802 -1.2907690126689699284 -3.6755454963816056591 1.0679674137579147075 -0.68654486035701001168 1.6837756188097194876 2.6504191774795549108 -1.2514176525242812765];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0562863104043787;
y1_step1.xoffset = 1.12576;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
